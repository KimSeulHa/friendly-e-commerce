plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}
bootJar{enabled=false}
jar{enabled=false}
group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'

ext{
    set('springCloudVersion',"2022.0.3")

}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.mysql:mysql-connector-j'
    testImplementation 'com.h2database:h2'

    //queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    //implementation "com.querydsl:querydsl-core"
    //implementation "com.querydsl:querydsl-collections"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation('it.ozimov:embedded-redis:0.7.3'){
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    implementation project(path:":cms-domain",configuration:"default")

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.data:spring-data-envers'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.apache.commons:commons-lang3:3.1'
}

def generated = 'src/main/generated'

//QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

///// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
}